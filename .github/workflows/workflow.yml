name: Launcher Build
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: release ${{ env.version }}
          draft: false
          prerelease: false

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Build
        run: |
          # Comandos para construir seg√∫n el sistema operativo
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "Building for Windows"
            # Ejemplo: npm run build:windows
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "Building for macOS"
            # Ejemplo: npm run build:macos
          else
            echo "Building for Linux"
            # Ejemplo: npm run build:linux
          fi

      - name: Upload Executable to Release (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/my-program.dmg
          asset_name: my-program-macos.dmg
          asset_content_type: application/octet-stream
